name: CD - Deploy Doctor Appointment App

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}  # Properly define the output to be used in the second job
    steps:
      - name: Set build number and tag
        id: set-tag
        run: |
          BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "tag=${BUILD_NUMBER}-prod" >> $GITHUB_OUTPUT  # Set the output properly

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and push
        run: |
          chmod +x ci/build-publish.sh
          ./ci/build-publish.sh "$ENVIRONMENT" 

  deploy-ec2:
    needs: deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Update tag & restart client
        uses: appleboy/ssh-action@v0.1.10
        env:
          COMPOSE_PROJECT_NAME: doctorapp
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 60s  # Increased timeout for SSH connection
          script: |
            set -euo pipefail
            
            ENV_FILE=/home/ubuntu/.env
            NEW_TAG="${{ needs.deploy.outputs.tag }}"
            
            echo "ðŸ”„ Set API_TAG=$NEW_TAG"
            if grep -q '^API_TAG=' "$ENV_FILE"; then
              sudo sed -i "s/^API_TAG=.*/API_TAG=$NEW_TAG/" "$ENV_FILE"
            else
              echo "API_TAG=$NEW_TAG" | sudo tee -a "$ENV_FILE"
            fi
            
            echo "ðŸš¢ Pull & restart client"
            sudo docker compose -f /home/ubuntu/docker-compose.yaml pull client
            sudo docker compose -f /home/ubuntu/docker-compose.yaml up -d --no-deps client