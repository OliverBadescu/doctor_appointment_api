name: CD - Deploy Doctor Appointment App

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.build-publish.outputs.tag }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build-publish
        run: |
          chmod +x ci/build.sh
          ci/build.sh prod

  deploy-ec2:
    needs: deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

      - name: Update tag & restart services
        uses: appleboy/ssh-action@v0.1.10
        env:
          TAG: ${{ needs.deploy.outputs.tag }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 60s
          envs: TAG
          script: |
            set -euo pipefail
            
            ENV_FILE=/home/ubuntu/.env
            
            # Use the exact tag received from the build job
            echo "üîÑ Setting API_TAG=$TAG"
            if grep -q '^API_TAG=' "$ENV_FILE"; then
              sudo sed -i "s/^API_TAG=.*$/API_TAG=$TAG/" "$ENV_FILE"
            else
              echo "API_TAG=$TAG" | sudo tee -a "$ENV_FILE"
            fi
            
            echo "üö¢ Pulling & restarting API container"
            sudo docker compose -f /home/ubuntu/docker-compose.yaml pull api
            sudo docker compose -f /home/ubuntu/docker-compose.yaml up -d --no-deps api
            
            # Verify the image was pulled correctly
            echo "üîç Verifying deployment:"
            sudo docker image ls | grep "$TAG" || echo "‚ö†Ô∏è Warning: Image with tag $TAG not found locally"